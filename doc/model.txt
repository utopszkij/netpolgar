Alap adatbázis kezelés
$table = \DB::table('név')
	->where
	-orderBy
	.....
	->update(["mező" => érték, ...])
	->insert(["mező" => érték, ...])
	->delete()
	->statement('......')

adat modell
===========

Adat lekérés
------------

filenév = tábla név 

Model
	adat elérés
	  ->orderBy('tábla.mező',...)
     ->offset(szám)
     ->limit(szám)
     ->join('tábla', 'tábla.mező' ,'=', 'tábla.mező','left outer')
         vagy ->leftJoin('tábla', 'tábla.mező' ,'=', 'tábla.mező')
	  ->select('táblaa.név',.....)
	  ->find($id)
     ->where('tábla.mező','=',érték)
     ->whereIn('mező',[érték,.....])
	  ->get() 								array -t add vissza
     ->first()                     - egy rekord objektumot ad vissza  
     ->count()                     - egy számot ad vissza
	  ->value('mezőnév')			  
	  
   adat tárolás, törlés		 	
  	  ->fieldname = value
     ->save()
     ->delete()
	  ->create(array)					  - record objektumot ad vissza
	  ->update(array)               - bool -t ad vissza
     ->all()->delete()                    
      		 ->count()

      		 
 Adat felvitel
 -------------
 
 Model->mezőnév = érték
 ....
 Model->save()

 vagy ->create([mezőnév => érték, ....])	
 
 Adat módosítás
 --------------
 
 1. rekord elérés
 2. Model->mezőnév = érték
    ......
 3. Model->save()
 
Adat törlés
-----------
1. rekord elérés
2. Model->delete()

   Model->truncate()
   
   
Utolsó müvelet hibaüzenete
--------------------------   
Model->errorMsg;  

Utoljára felvitt rekord id:
--------------------------
Model->id 
   
 
Tranzakció kezelés
------------------

DB::transaction(function() use ($model1, $model2, ....) {

            müveletek a modelleket használva
            
});

Hiba kezelés
------------   

try {
    ......
    
} catch ($e) {
	... Model->errorMsg használható ...
}   
 
      